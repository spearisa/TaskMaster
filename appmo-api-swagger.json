{
  "openapi": "3.0.0",
  "info": {
    "title": "Appmo API",
    "description": "API for Appmo task management platform",
    "version": "1.0.0",
    "contact": {
      "name": "Appmo Support",
      "url": "https://appmo.com/support",
      "email": "support@appmo.com"
    }
  },
  "servers": [
    {
      "url": "https://api.appmo.com",
      "description": "Production server"
    },
    {
      "url": "https://staging.api.appmo.com",
      "description": "Staging server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentication endpoints"
    },
    {
      "name": "Tasks",
      "description": "Task management endpoints"
    },
    {
      "name": "Templates",
      "description": "Task template management endpoints"
    },
    {
      "name": "Bidding",
      "description": "Task bidding endpoints"
    },
    {
      "name": "Messaging",
      "description": "Direct messaging endpoints"
    },
    {
      "name": "Users",
      "description": "User management endpoints"
    },
    {
      "name": "AI",
      "description": "AI assistant integration endpoints"
    },
    {
      "name": "API Keys",
      "description": "API key management endpoints"
    }
  ],
  "paths": {
    "/api/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Create a new user account with username and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "password"],
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "johndoe"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "securepassword123"
                  },
                  "displayName": {
                    "type": "string",
                    "example": "John Doe"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "username": {
                      "type": "string",
                      "example": "johndoe"
                    },
                    "displayName": {
                      "type": "string",
                      "example": "John Doe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or username already exists"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Log in a user",
        "description": "Authenticate a user with username and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "password"],
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "johndoe"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "securepassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User authenticated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "username": {
                      "type": "string",
                      "example": "johndoe"
                    },
                    "displayName": {
                      "type": "string",
                      "example": "John Doe"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Log out the current user",
        "description": "End the user's session",
        "responses": {
          "200": {
            "description": "User logged out successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "tags": ["Users"],
        "summary": "Get current user data",
        "description": "Retrieve information about the currently authenticated user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "username": {
                      "type": "string",
                      "example": "johndoe"
                    },
                    "displayName": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "bio": {
                      "type": "string",
                      "example": "I'm a productivity enthusiast who loves trying new task management methods."
                    },
                    "interests": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["productivity", "technology", "time management"]
                    },
                    "skills": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["organization", "planning", "prioritization"]
                    },
                    "avatarUrl": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-04-07T17:32:33.772Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/users/search": {
      "get": {
        "tags": ["Users"],
        "summary": "Search for users",
        "description": "Search for users by username, display name, interests, or skills",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Search query string",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 2
                      },
                      "username": {
                        "type": "string",
                        "example": "sarahsmith"
                      },
                      "displayName": {
                        "type": "string",
                        "example": "Sarah Smith"
                      },
                      "bio": {
                        "type": "string",
                        "example": "Project manager with 5 years of experience in tech."
                      },
                      "interests": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["project management", "agile", "productivity"]
                      },
                      "skills": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["leadership", "communication", "organization"]
                      },
                      "avatarUrl": {
                        "type": "string",
                        "nullable": true,
                        "example": null
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/users/{id}/profile": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user profile",
        "description": "Retrieve a user's public profile information",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 2
                    },
                    "username": {
                      "type": "string",
                      "example": "sarahsmith"
                    },
                    "displayName": {
                      "type": "string",
                      "example": "Sarah Smith"
                    },
                    "bio": {
                      "type": "string",
                      "example": "Project manager with 5 years of experience in tech."
                    },
                    "interests": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["project management", "agile", "productivity"]
                    },
                    "skills": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["leadership", "communication", "organization"]
                    },
                    "avatarUrl": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/profile": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user profile",
        "description": "Update the current user's profile information",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "bio": {
                    "type": "string",
                    "example": "Task management enthusiast and productivity expert."
                  },
                  "interests": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ["productivity", "technology", "time management"]
                  },
                  "skills": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ["organization", "planning", "prioritization"]
                  },
                  "avatarUrl": {
                    "type": "string",
                    "nullable": true,
                    "example": "https://example.com/avatar.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "username": {
                      "type": "string",
                      "example": "johndoe"
                    },
                    "displayName": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "bio": {
                      "type": "string",
                      "example": "Task management enthusiast and productivity expert."
                    },
                    "interests": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["productivity", "technology", "time management"]
                    },
                    "skills": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["organization", "planning", "prioritization"]
                    },
                    "avatarUrl": {
                      "type": "string",
                      "nullable": true,
                      "example": "https://example.com/avatar.jpg"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/tasks": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get current user's tasks",
        "description": "Retrieve all tasks created by or assigned to the current user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tasks retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "title": {
                        "type": "string",
                        "example": "Complete project proposal"
                      },
                      "description": {
                        "type": "string",
                        "nullable": true,
                        "example": "Write up the complete proposal for the new client project."
                      },
                      "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2025-04-30T23:59:59Z"
                      },
                      "completed": {
                        "type": "boolean",
                        "example": false
                      },
                      "completedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": null
                      },
                      "priority": {
                        "type": "string",
                        "enum": ["high", "medium", "low"],
                        "example": "medium"
                      },
                      "category": {
                        "type": "string",
                        "example": "Work"
                      },
                      "estimatedTime": {
                        "type": "integer",
                        "nullable": true,
                        "example": 3
                      },
                      "userId": {
                        "type": "integer",
                        "example": 1
                      },
                      "assignedToUserId": {
                        "type": "integer",
                        "nullable": true,
                        "example": null
                      },
                      "isPublic": {
                        "type": "boolean",
                        "example": false
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "tags": ["Tasks"],
        "summary": "Create a new task",
        "description": "Create a new task for the current user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["title"],
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Research new marketing strategies"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "example": "Investigate current market trends and compile report."
                  },
                  "dueDate": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true,
                    "example": "2025-05-15T23:59:59Z"
                  },
                  "priority": {
                    "type": "string",
                    "enum": ["high", "medium", "low"],
                    "default": "medium",
                    "example": "medium"
                  },
                  "category": {
                    "type": "string",
                    "default": "Work",
                    "example": "Marketing"
                  },
                  "estimatedTime": {
                    "type": "integer",
                    "nullable": true,
                    "example": 5
                  },
                  "assignedToUserId": {
                    "type": "integer",
                    "nullable": true,
                    "example": null
                  },
                  "isPublic": {
                    "type": "boolean",
                    "default": false,
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 5
                    },
                    "title": {
                      "type": "string",
                      "example": "Research new marketing strategies"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true,
                      "example": "Investigate current market trends and compile report."
                    },
                    "dueDate": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "example": "2025-05-15T23:59:59Z"
                    },
                    "completed": {
                      "type": "boolean",
                      "example": false
                    },
                    "completedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "example": null
                    },
                    "priority": {
                      "type": "string",
                      "enum": ["high", "medium", "low"],
                      "example": "medium"
                    },
                    "category": {
                      "type": "string",
                      "example": "Marketing"
                    },
                    "estimatedTime": {
                      "type": "integer",
                      "nullable": true,
                      "example": 5
                    },
                    "userId": {
                      "type": "integer",
                      "example": 1
                    },
                    "assignedToUserId": {
                      "type": "integer",
                      "nullable": true,
                      "example": null
                    },
                    "isPublic": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/tasks/{id}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get a specific task",
        "description": "Retrieve details of a specific task by its ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "title": {
                      "type": "string",
                      "example": "Complete project proposal"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true,
                      "example": "Write up the complete proposal for the new client project."
                    },
                    "dueDate": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "example": "2025-04-30T23:59:59Z"
                    },
                    "completed": {
                      "type": "boolean",
                      "example": false
                    },
                    "completedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "example": null
                    },
                    "priority": {
                      "type": "string",
                      "enum": ["high", "medium", "low"],
                      "example": "medium"
                    },
                    "category": {
                      "type": "string",
                      "example": "Work"
                    },
                    "estimatedTime": {
                      "type": "integer",
                      "nullable": true,
                      "example": 3
                    },
                    "userId": {
                      "type": "integer",
                      "example": 1
                    },
                    "assignedToUserId": {
                      "type": "integer",
                      "nullable": true,
                      "example": null
                    },
                    "isPublic": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "403": {
            "description": "Forbidden - You do not have permission to view this task"
          },
          "404": {
            "description": "Task not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": ["Tasks"],
        "summary": "Update a task",
        "description": "Update details of a specific task by its ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Complete project proposal (updated)"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "example": "Write up the complete proposal for the new client project including market analysis."
                  },
                  "dueDate": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true,
                    "example": "2025-05-05T23:59:59Z"
                  },
                  "completed": {
                    "type": "boolean",
                    "example": false
                  },
                  "priority": {
                    "type": "string",
                    "enum": ["high", "medium", "low"],
                    "example": "high"
                  },
                  "category": {
                    "type": "string",
                    "example": "Work"
                  },
                  "estimatedTime": {
                    "type": "integer",
                    "nullable": true,
                    "example": 5
                  },
                  "isPublic": {
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "title": {
                      "type": "string",
                      "example": "Complete project proposal (updated)"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true,
                      "example": "Write up the complete proposal for the new client project including market analysis."
                    },
                    "dueDate": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "example": "2025-05-05T23:59:59Z"
                    },
                    "completed": {
                      "type": "boolean",
                      "example": false
                    },
                    "completedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "example": null
                    },
                    "priority": {
                      "type": "string",
                      "enum": ["high", "medium", "low"],
                      "example": "high"
                    },
                    "category": {
                      "type": "string",
                      "example": "Work"
                    },
                    "estimatedTime": {
                      "type": "integer",
                      "nullable": true,
                      "example": 5
                    },
                    "userId": {
                      "type": "integer",
                      "example": 1
                    },
                    "assignedToUserId": {
                      "type": "integer",
                      "nullable": true,
                      "example": null
                    },
                    "isPublic": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Not authenticated"
          },
          "403": {
            "description": "Forbidden - You do not have permission to update this task"
          },
          "404": {
            "description": "Task not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete a task",
        "description": "Delete a specific task by its ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Task deleted successfully"
          },
          "401": {
            "description": "Not authenticated"
          },
          "403": {
            "description": "Forbidden - You do not have permission to delete this task"
          },
          "404": {
            "description": "Task not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/tasks/{id}/complete": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Mark a task as complete",
        "description": "Mark a specific task as completed",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task marked as complete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "title": {
                      "type": "string",
                      "example": "Complete project proposal"
                    },
                    "completed": {
                      "type": "boolean",
                      "example": true
                    },
                    "completedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-04-28T14:30:00Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "403": {
            "description": "Forbidden - You do not have permission to complete this task"
          },
          "404": {
            "description": "Task not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/tasks/{id}/assign": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Assign a task to a user",
        "description": "Assign a specific task to another user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["assignedToUserId"],
                "properties": {
                  "assignedToUserId": {
                    "type": "integer",
                    "example": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task assigned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "title": {
                      "type": "string",
                      "example": "Complete project proposal"
                    },
                    "assignedToUserId": {
                      "type": "integer",
                      "example": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or assignee not found"
          },
          "401": {
            "description": "Not authenticated"
          },
          "403": {
            "description": "Forbidden - You do not have permission to assign this task"
          },
          "404": {
            "description": "Task not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/tasks/{id}/public": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Set task public visibility",
        "description": "Make a task public or private",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["isPublic"],
                "properties": {
                  "isPublic": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task visibility updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "title": {
                      "type": "string",
                      "example": "Complete project proposal"
                    },
                    "isPublic": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Not authenticated"
          },
          "403": {
            "description": "Forbidden - You do not have permission to change this task's visibility"
          },
          "404": {
            "description": "Task not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/public-tasks": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get all public tasks",
        "description": "Retrieve all tasks marked as public",
        "responses": {
          "200": {
            "description": "Public tasks retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 10
                      },
                      "title": {
                        "type": "string",
                        "example": "Finish Closet doors"
                      },
                      "description": {
                        "type": "string",
                        "nullable": true,
                        "example": "Finish closet doors in bedroom and bathroom"
                      },
                      "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2025-04-29T05:00:00.000Z"
                      },
                      "completed": {
                        "type": "boolean",
                        "example": false
                      },
                      "completedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": null
                      },
                      "priority": {
                        "type": "string",
                        "enum": ["high", "medium", "low"],
                        "example": "medium"
                      },
                      "category": {
                        "type": "string",
                        "example": "Work"
                      },
                      "estimatedTime": {
                        "type": "integer",
                        "nullable": true,
                        "example": 2
                      },
                      "userId": {
                        "type": "integer",
                        "example": 1
                      },
                      "isPublic": {
                        "type": "boolean",
                        "example": true
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/templates": {
      "get": {
        "tags": ["Templates"],
        "summary": "Get user's task templates",
        "description": "Retrieve all task templates created by the current user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Task templates retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "title": {
                        "type": "string",
                        "example": "Weekly Report Template"
                      },
                      "description": {
                        "type": "string",
                        "nullable": true,
                        "example": "Template for creating weekly status reports."
                      },
                      "priority": {
                        "type": "string",
                        "enum": ["high", "medium", "low"],
                        "example": "medium"
                      },
                      "category": {
                        "type": "string",
                        "example": "Reports"
                      },
                      "estimatedTime": {
                        "type": "integer",
                        "nullable": true,
                        "example": 2
                      },
                      "userId": {
                        "type": "integer",
                        "example": 1
                      },
                      "isPublic": {
                        "type": "boolean",
                        "example": false
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "tags": ["Templates"],
        "summary": "Create a new task template",
        "description": "Create a new task template for the current user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["title"],
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Client Meeting Template"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "example": "Template for preparing client meeting notes and follow-ups."
                  },
                  "priority": {
                    "type": "string",
                    "enum": ["high", "medium", "low"],
                    "default": "medium",
                    "example": "high"
                  },
                  "category": {
                    "type": "string",
                    "default": "Meetings",
                    "example": "Meetings"
                  },
                  "estimatedTime": {
                    "type": "integer",
                    "nullable": true,
                    "example": 3
                  },
                  "isPublic": {
                    "type": "boolean",
                    "default": false,
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task template created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 3
                    },
                    "title": {
                      "type": "string",
                      "example": "Client Meeting Template"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true,
                      "example": "Template for preparing client meeting notes and follow-ups."
                    },
                    "priority": {
                      "type": "string",
                      "enum": ["high", "medium", "low"],
                      "example": "high"
                    },
                    "category": {
                      "type": "string",
                      "example": "Meetings"
                    },
                    "estimatedTime": {
                      "type": "integer",
                      "nullable": true,
                      "example": 3
                    },
                    "userId": {
                      "type": "integer",
                      "example": 1
                    },
                    "isPublic": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/templates/{id}/create-task": {
      "post": {
        "tags": ["Templates"],
        "summary": "Create a task from template",
        "description": "Create a new task using an existing template",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Template ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dueDate": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true,
                    "example": "2025-05-10T23:59:59Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created from template successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 15
                    },
                    "title": {
                      "type": "string",
                      "example": "Client Meeting Template"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true,
                      "example": "Template for preparing client meeting notes and follow-ups."
                    },
                    "dueDate": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "example": "2025-05-10T23:59:59Z"
                    },
                    "completed": {
                      "type": "boolean",
                      "example": false
                    },
                    "completedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "example": null
                    },
                    "priority": {
                      "type": "string",
                      "enum": ["high", "medium", "low"],
                      "example": "high"
                    },
                    "category": {
                      "type": "string",
                      "example": "Meetings"
                    },
                    "estimatedTime": {
                      "type": "integer",
                      "nullable": true,
                      "example": 3
                    },
                    "userId": {
                      "type": "integer",
                      "example": 1
                    },
                    "assignedToUserId": {
                      "type": "integer",
                      "nullable": true,
                      "example": null
                    },
                    "isPublic": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "404": {
            "description": "Template not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/public-templates": {
      "get": {
        "tags": ["Templates"],
        "summary": "Get public task templates",
        "description": "Retrieve all task templates marked as public",
        "responses": {
          "200": {
            "description": "Public templates retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 3
                      },
                      "title": {
                        "type": "string",
                        "example": "Client Meeting Template"
                      },
                      "description": {
                        "type": "string",
                        "nullable": true,
                        "example": "Template for preparing client meeting notes and follow-ups."
                      },
                      "priority": {
                        "type": "string",
                        "enum": ["high", "medium", "low"],
                        "example": "high"
                      },
                      "category": {
                        "type": "string",
                        "example": "Meetings"
                      },
                      "estimatedTime": {
                        "type": "integer",
                        "nullable": true,
                        "example": 3
                      },
                      "userId": {
                        "type": "integer",
                        "example": 1
                      },
                      "isPublic": {
                        "type": "boolean",
                        "example": true
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/conversations": {
      "get": {
        "tags": ["Messaging"],
        "summary": "Get user conversations",
        "description": "Retrieve list of all conversations for the current user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Conversations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "conversation": {
                        "type": "object",
                        "properties": {
                          "otherUserId": {
                            "type": "integer",
                            "example": 2
                          },
                          "lastMessageId": {
                            "type": "integer",
                            "example": 25
                          },
                          "lastMessageContent": {
                            "type": "string",
                            "example": "Looking forward to our meeting tomorrow!"
                          },
                          "lastMessageDate": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2025-04-26T15:30:45Z"
                          },
                          "unreadCount": {
                            "type": "integer",
                            "example": 2
                          }
                        }
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 2
                          },
                          "username": {
                            "type": "string",
                            "example": "sarahsmith"
                          },
                          "displayName": {
                            "type": "string",
                            "example": "Sarah Smith"
                          },
                          "avatarUrl": {
                            "type": "string",
                            "nullable": true,
                            "example": null
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/messages/{userId}": {
      "get": {
        "tags": ["Messaging"],
        "summary": "Get messages with a user",
        "description": "Retrieve all messages between the current user and another user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID of the other user in the conversation",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Messages retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 25
                      },
                      "senderId": {
                        "type": "integer",
                        "example": 2
                      },
                      "receiverId": {
                        "type": "integer",
                        "example": 1
                      },
                      "content": {
                        "type": "string",
                        "example": "Looking forward to our meeting tomorrow!"
                      },
                      "read": {
                        "type": "boolean",
                        "example": false
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-26T15:30:45Z"
                      },
                      "delivered": {
                        "type": "boolean",
                        "example": true
                      },
                      "edited": {
                        "type": "boolean",
                        "example": false
                      },
                      "reactions": {
                        "type": "string",
                        "nullable": true,
                        "example": "👍,😊"
                      },
                      "deleted": {
                        "type": "boolean",
                        "example": false
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "tags": ["Messaging"],
        "summary": "Send a message to a user",
        "description": "Send a new message to another user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID of the message recipient",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["content"],
                "properties": {
                  "content": {
                    "type": "string",
                    "example": "Hi, are you available to discuss the project tomorrow?"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 26
                    },
                    "senderId": {
                      "type": "integer",
                      "example": 1
                    },
                    "receiverId": {
                      "type": "integer",
                      "example": 2
                    },
                    "content": {
                      "type": "string",
                      "example": "Hi, are you available to discuss the project tomorrow?"
                    },
                    "read": {
                      "type": "boolean",
                      "example": false
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-04-27T10:15:30Z"
                    },
                    "delivered": {
                      "type": "boolean",
                      "example": false
                    },
                    "edited": {
                      "type": "boolean",
                      "example": false
                    },
                    "reactions": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "deleted": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Not authenticated"
          },
          "404": {
            "description": "Recipient not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/messages/{userId}/read": {
      "post": {
        "tags": ["Messaging"],
        "summary": "Mark messages as read",
        "description": "Mark all messages from a specific user as read",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID of the sender whose messages to mark as read",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Messages marked as read successfully"
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/ai/task-suggestions": {
      "get": {
        "tags": ["AI"],
        "summary": "Get AI task suggestions",
        "description": "Get AI-generated suggestions for task optimization based on current tasks",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Task suggestions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "suggestions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Consider combining your two research tasks to save time",
                        "The 'Fix closet doors' task could be delegated since you have several high-priority items"
                      ]
                    },
                    "optimizedSchedule": {
                      "type": "object",
                      "properties": {
                        "morning": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": ["Complete the weekly report", "Call client about project updates"]
                        },
                        "afternoon": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": ["Research new productivity tools", "Update project timeline"]
                        },
                        "evening": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": ["Review tomorrow's agenda", "Prepare materials for morning meeting"]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error or AI service unavailable"
          }
        }
      },
      "post": {
        "tags": ["AI"],
        "summary": "Get AI task suggestions (legacy)",
        "description": "Get AI-generated suggestions for optimizing task management",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["tasks"],
                "properties": {
                  "tasks": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "description": "Array of user tasks"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task suggestions generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "suggestions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Consider grouping similar tasks from your 'Research' category to improve focus and efficiency.",
                        "You have 5 high priority tasks due this week. Consider rescheduling some lower-priority tasks to next week.",
                        "Your most productive time based on task completion patterns appears to be mornings. Schedule complex tasks during this time."
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error or AI service unavailable"
          }
        }
      }
    },
    "/api/ai/task-reminder": {
      "post": {
        "tags": ["AI"],
        "summary": "Generate task reminder",
        "description": "Generate an AI-powered reminder for a specific task",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["task"],
                "properties": {
                  "task": {
                    "type": "object",
                    "description": "Task object to generate reminder for"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reminder generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reminder": {
                      "type": "string",
                      "example": "Don't forget to complete your 'Research new marketing strategies' task! It's due tomorrow and is high priority. You've allocated 3 hours for this task, so make sure to schedule adequate time today."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error or AI service unavailable"
          }
        }
      }
    },
    "/api/ai/daily-schedule": {
      "post": {
        "tags": ["AI"],
        "summary": "Generate daily schedule",
        "description": "Generate an optimized daily schedule based on user's tasks",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["tasks"],
                "properties": {
                  "tasks": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "description": "Array of user tasks"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Daily schedule generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "schedule": {
                      "type": "object",
                      "example": {
                        "morning": [
                          { "time": "9:00 AM - 10:30 AM", "task": "Research new marketing strategies", "priority": "high" },
                          { "time": "10:45 AM - 11:30 AM", "task": "Team check-in call", "priority": "medium" }
                        ],
                        "afternoon": [
                          { "time": "1:00 PM - 2:30 PM", "task": "Complete project proposal", "priority": "medium" },
                          { "time": "3:00 PM - 4:00 PM", "task": "Review quarterly reports", "priority": "low" }
                        ],
                        "evening": []
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error or AI service unavailable"
          }
        }
      }
    },
    "/api/ai/delegate-task": {
      "post": {
        "tags": ["AI"],
        "summary": "Delegate task to AI",
        "description": "Delegate a task to AI assistant for detailed completion steps",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["task"],
                "properties": {
                  "task": {
                    "type": "object",
                    "description": "Task object to delegate"
                  },
                  "context": {
                    "type": "string",
                    "description": "Additional context or instructions for the AI",
                    "example": "Focus on digital marketing strategies for a small business"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task delegation successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "steps": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "1. Research current market trends in digital marketing for small businesses",
                        "2. Analyze competitor strategies and identify gaps",
                        "3. Create a list of 5-7 potential marketing strategies specifically tailored to your small business",
                        "4. Evaluate each strategy based on cost, potential ROI, and implementation difficulty",
                        "5. Compile findings into a structured report with recommendations"
                      ]
                    },
                    "recommendations": {
                      "type": "string",
                      "example": "Focus on social media marketing and email campaigns as they offer the best ROI for small businesses with limited marketing budgets."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error or AI service unavailable"
          }
        }
      }
    },
    "/api/ai/chat": {
      "post": {
        "tags": ["AI"],
        "summary": "Generate chat completion",
        "description": "Generate a response from the AI assistant for a given prompt",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["prompt"],
                "properties": {
                  "prompt": {
                    "type": "string",
                    "example": "What are some effective ways to prioritize tasks?"
                  },
                  "useModel": {
                    "type": "string",
                    "enum": ["openai", "anthropic"],
                    "default": "openai",
                    "example": "anthropic"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat completion generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "string",
                      "example": "Effective task prioritization methods include:\n\n1. The Eisenhower Matrix - Sort tasks by urgency and importance\n2. The ABCDE Method - Assign priority levels from A (most important) to E (eliminate)\n3. The MoSCoW Method - Categorize tasks as Must, Should, Could, or Won't\n4. Time-blocking - Allocate specific time blocks for different priorities\n5. Value-based prioritization - Focus on tasks with highest ROI\n\nChoose a method that aligns with your work style and goals."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error or AI service unavailable"
          }
        }
      }
    },
    "/api/ai/generate-image": {
      "post": {
        "tags": ["AI"],
        "summary": "Generate image using DALL-E",
        "description": "Generate an image using OpenAI's DALL-E model",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["prompt"],
                "properties": {
                  "prompt": {
                    "type": "string",
                    "example": "A minimalist task management dashboard with a productivity theme"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Image generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "example": "https://example.com/generated-image.png"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error or AI service unavailable"
          }
        }
      }
    },
    "/api/task-bids/{taskId}": {
      "get": {
        "tags": ["Bidding"],
        "summary": "Get bids for a task",
        "description": "Retrieve all bids for a specific task",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task bids retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "taskId": {
                        "type": "integer",
                        "example": 10
                      },
                      "bidderId": {
                        "type": "integer",
                        "example": 2
                      },
                      "amount": {
                        "type": "number",
                        "example": 50.00
                      },
                      "proposal": {
                        "type": "string",
                        "example": "I can complete this task by the end of the week with high quality results."
                      },
                      "estimatedTime": {
                        "type": "integer",
                        "nullable": true,
                        "example": 4
                      },
                      "status": {
                        "type": "string",
                        "enum": ["pending", "accepted", "rejected", "completed"],
                        "example": "pending"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-20T10:15:30Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-20T10:15:30Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "403": {
            "description": "Forbidden - Not authorized to view bids for this task"
          },
          "404": {
            "description": "Task not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "tags": ["Bidding"],
        "summary": "Create a bid for a task",
        "description": "Submit a bid for a specific task",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["amount", "proposal"],
                "properties": {
                  "amount": {
                    "type": "number",
                    "example": 45.50
                  },
                  "proposal": {
                    "type": "string",
                    "example": "I have extensive experience with closet door installation and can complete this task efficiently."
                  },
                  "estimatedTime": {
                    "type": "integer",
                    "nullable": true,
                    "example": 3
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Bid created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 5
                    },
                    "taskId": {
                      "type": "integer",
                      "example": 10
                    },
                    "bidderId": {
                      "type": "integer",
                      "example": 1
                    },
                    "amount": {
                      "type": "number",
                      "example": 45.50
                    },
                    "proposal": {
                      "type": "string",
                      "example": "I have extensive experience with closet door installation and can complete this task efficiently."
                    },
                    "estimatedTime": {
                      "type": "integer",
                      "example": 3
                    },
                    "status": {
                      "type": "string",
                      "example": "pending"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-04-27T14:30:00Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-04-27T14:30:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Not authenticated"
          },
          "403": {
            "description": "Forbidden - Cannot bid on your own task or task is not public"
          },
          "404": {
            "description": "Task not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/task-bids/{taskId}/accept/{bidId}": {
      "post": {
        "tags": ["Bidding"],
        "summary": "Accept a bid",
        "description": "Accept a specific bid for a task",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "bidId",
            "in": "path",
            "description": "Bid ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bid accepted successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Not authenticated"
          },
          "403": {
            "description": "Forbidden - Only task owner can accept bids"
          },
          "404": {
            "description": "Task or bid not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/bids/received": {
      "get": {
        "tags": ["Bidding"],
        "summary": "Get all bids received",
        "description": "Retrieve all bids received on the user's tasks",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Bids retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "bid": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "taskId": {
                            "type": "integer",
                            "example": 5
                          },
                          "bidderId": {
                            "type": "integer",
                            "example": 2
                          },
                          "amount": {
                            "type": "number",
                            "format": "float",
                            "example": 25.50
                          },
                          "status": {
                            "type": "string",
                            "enum": ["pending", "accepted", "rejected", "completed"],
                            "example": "pending"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2025-04-17T10:30:00Z"
                          }
                        }
                      },
                      "task": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 5
                          },
                          "title": {
                            "type": "string",
                            "example": "Build a website"
                          }
                        }
                      },
                      "bidder": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 2
                          },
                          "username": {
                            "type": "string",
                            "example": "janesmith"
                          },
                          "displayName": {
                            "type": "string",
                            "example": "Jane Smith"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/bids/placed": {
      "get": {
        "tags": ["Bidding"],
        "summary": "Get all bids placed",
        "description": "Retrieve all bids placed by the current user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Bids retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "bid": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "taskId": {
                            "type": "integer",
                            "example": 5
                          },
                          "bidderId": {
                            "type": "integer",
                            "example": 2
                          },
                          "amount": {
                            "type": "number",
                            "format": "float",
                            "example": 25.50
                          },
                          "status": {
                            "type": "string",
                            "enum": ["pending", "accepted", "rejected", "completed"],
                            "example": "pending"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2025-04-17T10:30:00Z"
                          }
                        }
                      },
                      "task": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 5
                          },
                          "title": {
                            "type": "string",
                            "example": "Build a website"
                          }
                        }
                      },
                      "taskOwner": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 3
                          },
                          "username": {
                            "type": "string",
                            "example": "bobcooper"
                          },
                          "displayName": {
                            "type": "string",
                            "example": "Bob Cooper"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/bids/{bidId}/accept": {
      "post": {
        "tags": ["Bidding"],
        "summary": "Accept a bid (alternative endpoint)",
        "description": "Accept a specific bid by its ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "bidId",
            "in": "path",
            "description": "Bid ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bid accepted successfully"fully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "task": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 10
                        },
                        "title": {
                          "type": "string",
                          "example": "Finish Closet doors"
                        },
                        "assignedToUserId": {
                          "type": "integer",
                          "example": 2
                        },
                        "winningBidId": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    },
                    "bid": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "status": {
                          "type": "string",
                          "example": "accepted"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "403": {
            "description": "Forbidden - Not authorized to accept bids for this task"
          },
          "404": {
            "description": "Task or bid not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/payment/create-intent": {
      "post": {
        "tags": ["Bidding"],
        "summary": "Create payment intent",
        "description": "Create a Stripe payment intent for a task bid",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["amount", "taskId", "bidId"],
                "properties": {
                  "amount": {
                    "type": "number",
                    "example": 45.50
                  },
                  "taskId": {
                    "type": "integer",
                    "example": 10
                  },
                  "bidId": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment intent created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "clientSecret": {
                      "type": "string",
                      "example": "pi_3NJfZMDpvT0XUt0E1O4YgVdS_secret_LWvsNQOhwzcz0GYmqQqLaXLH1"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Not authenticated"
          },
          "404": {
            "description": "Task or bid not found"
          },
          "500": {
            "description": "Server error or payment service unavailable"
          }
        }
      }
    },
    "/api/keys": {
      "get": {
        "tags": ["API Keys"],
        "summary": "Get all API keys",
        "description": "Retrieve all API keys for the current user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "API keys retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "Development"
                      },
                      "key": {
                        "type": "string",
                        "example": "appmo_f5e8d...3a7c1"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-10T12:00:00Z"
                      },
                      "lastUsedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2025-04-15T15:30:00Z"
                      },
                      "expiresAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": null
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "tags": ["API Keys"],
        "summary": "Create a new API key",
        "description": "Create a new API key for the current user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Production"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "API key created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 2
                    },
                    "name": {
                      "type": "string",
                      "example": "Production"
                    },
                    "key": {
                      "type": "string",
                      "example": "appmo_a9b8c7d6e5f4g3h2i1j0k"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-04-17T14:30:00Z"
                    },
                    "lastUsedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "example": null
                    },
                    "expiresAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/keys/{id}": {
      "delete": {
        "tags": ["API Keys"],
        "summary": "Revoke an API key",
        "description": "Revoke (delete) a specific API key",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "API key ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "API key revoked successfully"
          },
          "401": {
            "description": "Not authenticated"
          },
          "404": {
            "description": "API key not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/verify-key": {
      "get": {
        "tags": ["API Keys"],
        "summary": "Verify API key",
        "description": "Verify that an API key is valid",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "API key verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "valid": {
                      "type": "boolean",
                      "example": true
                    },
                    "userId": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid API key"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "API key"
      }
    }
  }
}