{
  "openapi": "3.0.3",
  "info": {
    "title": "Appmo API",
    "description": "API documentation for Appmo - Intelligent Task Management Platform",
    "version": "1.0.0",
    "contact": {
      "name": "Appmo Support",
      "url": "https://appmo.com/support",
      "email": "support@appmo.com"
    }
  },
  "servers": [
    {
      "url": "/api",
      "description": "Production Server"
    }
  ],
  "tags": [
    {
      "name": "authentication",
      "description": "Authentication operations"
    },
    {
      "name": "tasks",
      "description": "Task management operations"
    },
    {
      "name": "templates",
      "description": "Task template operations"
    },
    {
      "name": "bids",
      "description": "Task bidding operations"
    },
    {
      "name": "messages",
      "description": "Messaging operations"
    },
    {
      "name": "users",
      "description": "User profile operations"
    },
    {
      "name": "ai",
      "description": "AI features operations"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "User login",
        "description": "Authenticate a user and start a session",
        "operationId": "loginUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "User registration",
        "description": "Register a new user account",
        "operationId": "registerUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or username already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/google": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Google authentication",
        "description": "Authenticate a user with Google credentials",
        "operationId": "googleAuth",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleAuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "User logout",
        "description": "End the current user session",
        "operationId": "logoutUser",
        "responses": {
          "200": {
            "description": "Successful logout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get current user",
        "description": "Get the profile of the currently authenticated user",
        "operationId": "getCurrentUser",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Get all tasks",
        "description": "Get all tasks for the authenticated user",
        "operationId": "getAllTasks",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Create task",
        "description": "Create a new task",
        "operationId": "createTask",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Get task by ID",
        "description": "Get details of a specific task",
        "operationId": "getTaskById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "tasks"
        ],
        "summary": "Update task",
        "description": "Update an existing task",
        "operationId": "updateTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated or not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tasks"
        ],
        "summary": "Delete task",
        "description": "Delete an existing task",
        "operationId": "deleteTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated or not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}/complete": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Complete task",
        "description": "Mark a task as completed",
        "operationId": "completeTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated or not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}/assign": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Assign task",
        "description": "Assign a task to another user",
        "operationId": "assignTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "assignedToUserId"
                ],
                "properties": {
                  "assignedToUserId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of user to assign the task to"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task assigned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Task or user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated or not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}/public": {
      "patch": {
        "tags": [
          "tasks"
        ],
        "summary": "Set task public status",
        "description": "Change a task's public visibility",
        "operationId": "setTaskPublic",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "isPublic"
                ],
                "properties": {
                  "isPublic": {
                    "type": "boolean",
                    "description": "Public visibility flag"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task public status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated or not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/assigned-tasks": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Get assigned tasks",
        "description": "Get all tasks assigned to the authenticated user",
        "operationId": "getAssignedTasks",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/public-tasks": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Get public tasks",
        "description": "Get all public tasks",
        "operationId": "getPublicTasks",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shared-task/{id}": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Get shared task",
        "description": "Get details for a shared task, including the creator's information",
        "operationId": "getSharedTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Task"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "creator": {
                          "$ref": "#/components/schemas/UserBasic"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Task not found or not public",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{taskId}/bids": {
      "get": {
        "tags": [
          "bids"
        ],
        "summary": "Get task bids",
        "description": "Get all bids for a specific task",
        "operationId": "getTaskBids",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskBidWithBidder"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated or not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "bids"
        ],
        "summary": "Create bid",
        "description": "Create a new bid on a task",
        "operationId": "createBid",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBidRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Bid created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskBid"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or task not accepting bids",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/bids/{id}": {
      "patch": {
        "tags": [
          "bids"
        ],
        "summary": "Update bid",
        "description": "Update an existing bid",
        "operationId": "updateBid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bid ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBidRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bid updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskBid"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Bid not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated or not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "bids"
        ],
        "summary": "Delete bid",
        "description": "Delete an existing bid",
        "operationId": "deleteBid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bid ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bid deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bid not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated or not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{taskId}/bids/{bidId}/accept": {
      "post": {
        "tags": [
          "bids"
        ],
        "summary": "Accept bid",
        "description": "Accept a bid for a task",
        "operationId": "acceptBid",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "bidId",
            "in": "path",
            "description": "Bid ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bid accepted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Task or bid not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated or not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bid already accepted or task closed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/my-bids": {
      "get": {
        "tags": [
          "bids"
        ],
        "summary": "Get my bids",
        "description": "Get all bids placed by the authenticated user",
        "operationId": "getMyBids",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskBidWithTask"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/create-payment-intent": {
      "post": {
        "tags": [
          "bids"
        ],
        "summary": "Create payment intent",
        "description": "Create a Stripe payment intent for a bid payment",
        "operationId": "createPaymentIntent",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "bidId",
                  "amount"
                ],
                "properties": {
                  "bidId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the bid"
                  },
                  "amount": {
                    "type": "number",
                    "format": "float",
                    "description": "Payment amount"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment intent created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "clientSecret": {
                      "type": "string",
                      "description": "Stripe payment intent client secret"
                    },
                    "paymentIntentId": {
                      "type": "string",
                      "description": "Stripe payment intent ID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/task-templates": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "Get task templates",
        "description": "Get all task templates created by the authenticated user",
        "operationId": "getTaskTemplates",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskTemplate"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "templates"
        ],
        "summary": "Create task template",
        "description": "Create a new task template",
        "operationId": "createTaskTemplate",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskTemplateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task template created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplate"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/task-templates/{id}": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "Get task template by ID",
        "description": "Get details of a specific task template",
        "operationId": "getTaskTemplateById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Template ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplate"
                }
              }
            }
          },
          "404": {
            "description": "Template not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated or not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "templates"
        ],
        "summary": "Delete task template",
        "description": "Delete an existing task template",
        "operationId": "deleteTaskTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Template ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Template deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Template not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated or not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/task-templates/{id}/create-task": {
      "post": {
        "tags": [
          "templates"
        ],
        "summary": "Create task from template",
        "description": "Create a new task based on a template",
        "operationId": "createTaskFromTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Template ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dueDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Optional due date for the new task"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Template not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/conversations": {
      "get": {
        "tags": [
          "messages"
        ],
        "summary": "Get conversations",
        "description": "Get all conversations for the authenticated user",
        "operationId": "getConversations",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConversationWithUser"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/messages/{userId}": {
      "get": {
        "tags": [
          "messages"
        ],
        "summary": "Get messages",
        "description": "Get all messages between the authenticated user and another user",
        "operationId": "getMessages",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DirectMessage"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/messages": {
      "post": {
        "tags": [
          "messages"
        ],
        "summary": "Send message",
        "description": "Send a new message to another user",
        "operationId": "sendMessage",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectMessage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/messages/{userId}/read": {
      "post": {
        "tags": [
          "messages"
        ],
        "summary": "Mark messages as read",
        "description": "Mark all messages from a specific user as read",
        "operationId": "markMessagesAsRead",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Messages marked as read successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/messages/{id}/edit": {
      "patch": {
        "tags": [
          "messages"
        ],
        "summary": "Edit message",
        "description": "Edit an existing message",
        "operationId": "editMessage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Message ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "message"
                ],
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "New message content"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message edited successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectMessage"
                }
              }
            }
          },
          "404": {
            "description": "Message not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated or not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/messages/{id}/reaction": {
      "post": {
        "tags": [
          "messages"
        ],
        "summary": "Add reaction",
        "description": "Add an emoji reaction to a message",
        "operationId": "addReaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Message ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "emoji"
                ],
                "properties": {
                  "emoji": {
                    "type": "string",
                    "description": "Emoji character"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reaction added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectMessage"
                }
              }
            }
          },
          "404": {
            "description": "Message not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "messages"
        ],
        "summary": "Remove reaction",
        "description": "Remove an emoji reaction from a message",
        "operationId": "removeReaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Message ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "emoji"
                ],
                "properties": {
                  "emoji": {
                    "type": "string",
                    "description": "Emoji character"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reaction removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectMessage"
                }
              }
            }
          },
          "404": {
            "description": "Message not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/profile/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get user profile",
        "description": "Get the profile for a specific user",
        "operationId": "getUserProfile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/profile": {
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update user profile",
        "description": "Update the authenticated user's profile",
        "operationId": "updateUserProfile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/search": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Search users",
        "description": "Search for users by username, display name, bio, interests, or skills",
        "operationId": "searchUsers",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Search query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ai/task-suggestions": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Generate task suggestions",
        "description": "Generate AI-powered task suggestions based on existing tasks",
        "operationId": "generateTaskSuggestions",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "tasks"
                ],
                "properties": {
                  "tasks": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TaskInput"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Suggestions generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "suggestions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Suggested task title"
                          },
                          "reasoning": {
                            "type": "string",
                            "description": "Reasoning behind the suggestion"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ai/task-reminder": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Generate task reminder",
        "description": "Generate an AI-powered reminder for a specific task",
        "operationId": "generateTaskReminder",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "task"
                ],
                "properties": {
                  "task": {
                    "$ref": "#/components/schemas/TaskInput"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reminder generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reminder": {
                      "type": "string",
                      "description": "Generated reminder text"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ai/daily-schedule": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Generate daily schedule",
        "description": "Generate an optimized daily schedule based on user's tasks",
        "operationId": "generateDailySchedule",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "tasks"
                ],
                "properties": {
                  "tasks": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TaskInput"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Schedule generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "schedule": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "time": {
                            "type": "string",
                            "description": "Time slot"
                          },
                          "taskId": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Task ID"
                          },
                          "title": {
                            "type": "string",
                            "description": "Task title"
                          },
                          "duration": {
                            "type": "string",
                            "description": "Task duration"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ai/delegate-task": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Delegate task to AI",
        "description": "Delegate a task to the AI assistant for detailed completion steps",
        "operationId": "delegateTaskToAI",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "task"
                ],
                "properties": {
                  "task": {
                    "$ref": "#/components/schemas/TaskInput"
                  },
                  "context": {
                    "type": "string",
                    "description": "Additional context for the task"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task delegation successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "properties": {
                        "steps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Step title"
                              },
                              "description": {
                                "type": "string",
                                "description": "Step description"
                              }
                            }
                          }
                        },
                        "resources": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Resource title"
                              },
                              "url": {
                                "type": "string",
                                "description": "Resource URL"
                              },
                              "description": {
                                "type": "string",
                                "description": "Resource description"
                              }
                            }
                          }
                        },
                        "completionNotes": {
                          "type": "string",
                          "description": "Additional notes on task completion"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ai/generate-image": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Generate image",
        "description": "Generate an image based on a prompt using DALL-E",
        "operationId": "generateImage",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "prompt"
                ],
                "properties": {
                  "prompt": {
                    "type": "string",
                    "description": "Image generation prompt"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Image generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "URL of the generated image"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or generation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ai/generate-code": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Generate code",
        "description": "Generate code in a specified programming language based on a prompt",
        "operationId": "generateCode",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "prompt",
                  "language"
                ],
                "properties": {
                  "prompt": {
                    "type": "string",
                    "description": "Code generation prompt"
                  },
                  "language": {
                    "type": "string",
                    "description": "Programming language"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Code generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Generated code"
                    },
                    "explanation": {
                      "type": "string",
                      "description": "Explanation of the generated code"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or generation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LoginRequest": {
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string",
            "example": "demo"
          },
          "password": {
            "type": "string",
            "example": "password"
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": [
          "username",
          "password",
          "confirmPassword"
        ],
        "properties": {
          "username": {
            "type": "string",
            "example": "newuser"
          },
          "password": {
            "type": "string",
            "example": "securepassword"
          },
          "confirmPassword": {
            "type": "string",
            "example": "securepassword"
          }
        }
      },
      "GoogleAuthRequest": {
        "type": "object",
        "required": [
          "idToken"
        ],
        "properties": {
          "idToken": {
            "type": "string",
            "description": "Google ID token"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "demo"
          },
          "displayName": {
            "type": "string",
            "example": "Demo User"
          },
          "bio": {
            "type": "string",
            "example": "I'm a productivity enthusiast who loves trying new task management methods."
          },
          "interests": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "productivity",
              "technology",
              "time management"
            ]
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "organization",
              "planning",
              "prioritization"
            ]
          },
          "avatarUrl": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-07T17:32:33.772Z"
          }
        }
      },
      "UserBasic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "demo"
          },
          "displayName": {
            "type": "string",
            "example": "Demo User"
          }
        }
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "demo"
          },
          "displayName": {
            "type": "string",
            "example": "Demo User"
          },
          "bio": {
            "type": "string",
            "example": "I'm a productivity enthusiast who loves trying new task management methods."
          },
          "interests": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "productivity",
              "technology",
              "time management"
            ]
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "organization",
              "planning",
              "prioritization"
            ]
          },
          "avatarUrl": {
            "type": "string",
            "nullable": true,
            "example": null
          }
        }
      },
      "UpdateProfileRequest": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "example": "Updated Name"
          },
          "bio": {
            "type": "string",
            "example": "Updated bio information"
          },
          "interests": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "productivity",
              "technology",
              "time management"
            ]
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "organization",
              "planning",
              "prioritization"
            ]
          },
          "avatarUrl": {
            "type": "string",
            "nullable": true,
            "example": "https://example.com/avatar.jpg"
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "Finish project report"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Complete the quarterly project report with all metrics and insights"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-04-20T23:59:59.999Z"
          },
          "completed": {
            "type": "boolean",
            "example": false
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": null
          },
          "priority": {
            "type": "string",
            "enum": [
              "high",
              "medium",
              "low"
            ],
            "example": "high"
          },
          "category": {
            "type": "string",
            "example": "Work"
          },
          "estimatedTime": {
            "type": "integer",
            "nullable": true,
            "example": 120
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "assignedToUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "example": null
          },
          "isPublic": {
            "type": "boolean",
            "example": false
          },
          "budget": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "example": 50
          },
          "acceptingBids": {
            "type": "boolean",
            "example": true
          },
          "biddingDeadline": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-04-15T23:59:59.999Z"
          },
          "winningBidId": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "example": null
          }
        }
      },
      "TaskInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "Finish project report"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Complete the quarterly project report with all metrics and insights"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-04-20T23:59:59.999Z"
          },
          "completed": {
            "type": "boolean",
            "example": false
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": null
          },
          "priority": {
            "type": "string",
            "enum": [
              "high",
              "medium",
              "low"
            ],
            "example": "high"
          },
          "category": {
            "type": "string",
            "example": "Work"
          },
          "estimatedTime": {
            "type": "integer",
            "nullable": true,
            "example": 120
          }
        }
      },
      "CreateTaskRequest": {
        "type": "object",
        "required": [
          "title"
        ],
        "properties": {
          "title": {
            "type": "string",
            "example": "Finish project report"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Complete the quarterly project report with all metrics and insights"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-04-20T23:59:59.999Z"
          },
          "priority": {
            "type": "string",
            "enum": [
              "high",
              "medium",
              "low"
            ],
            "default": "medium",
            "example": "high"
          },
          "category": {
            "type": "string",
            "example": "Work"
          },
          "estimatedTime": {
            "type": "integer",
            "nullable": true,
            "example": 120
          },
          "isPublic": {
            "type": "boolean",
            "default": false,
            "example": false
          },
          "budget": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "example": 50
          },
          "acceptingBids": {
            "type": "boolean",
            "default": false,
            "example": true
          },
          "biddingDeadline": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-04-15T23:59:59.999Z"
          }
        }
      },
      "UpdateTaskRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Updated project report title"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Updated description for the project report"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-04-25T23:59:59.999Z"
          },
          "priority": {
            "type": "string",
            "enum": [
              "high",
              "medium",
              "low"
            ],
            "example": "medium"
          },
          "category": {
            "type": "string",
            "example": "Work"
          },
          "estimatedTime": {
            "type": "integer",
            "nullable": true,
            "example": 90
          },
          "isPublic": {
            "type": "boolean",
            "example": true
          },
          "budget": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "example": 75
          },
          "acceptingBids": {
            "type": "boolean",
            "example": false
          },
          "biddingDeadline": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-04-20T23:59:59.999Z"
          }
        }
      },
      "TaskTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "Weekly Report Template"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Standard template for weekly status reports"
          },
          "priority": {
            "type": "string",
            "enum": [
              "high",
              "medium",
              "low"
            ],
            "example": "medium"
          },
          "category": {
            "type": "string",
            "example": "Work"
          },
          "estimatedTime": {
            "type": "integer",
            "nullable": true,
            "example": 60
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "isPublic": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-01T10:30:00.000Z"
          }
        }
      },
      "CreateTaskTemplateRequest": {
        "type": "object",
        "required": [
          "title"
        ],
        "properties": {
          "title": {
            "type": "string",
            "example": "Weekly Report Template"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Standard template for weekly status reports"
          },
          "priority": {
            "type": "string",
            "enum": [
              "high",
              "medium",
              "low"
            ],
            "default": "medium",
            "example": "medium"
          },
          "category": {
            "type": "string",
            "example": "Work"
          },
          "estimatedTime": {
            "type": "integer",
            "nullable": true,
            "example": 60
          },
          "isPublic": {
            "type": "boolean",
            "default": false,
            "example": true
          }
        }
      },
      "TaskBid": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "taskId": {
            "type": "integer",
            "format": "int64",
            "example": 5
          },
          "bidderId": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "amount": {
            "type": "string",
            "example": "45.00"
          },
          "proposal": {
            "type": "string",
            "example": "I can complete this task efficiently with high quality results"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "accepted",
              "rejected",
              "completed"
            ],
            "example": "pending"
          },
          "estimatedTime": {
            "type": "integer",
            "nullable": true,
            "example": 90
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-10T14:30:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": null
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": null
          },
          "stripePaymentIntentId": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "stripePaymentStatus": {
            "type": "string",
            "nullable": true,
            "example": null
          }
        }
      },
      "TaskBidWithBidder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskBid"
          },
          {
            "type": "object",
            "properties": {
              "bidder": {
                "$ref": "#/components/schemas/UserBasic"
              }
            }
          }
        ]
      },
      "TaskBidWithTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskBid"
          },
          {
            "type": "object",
            "properties": {
              "task": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 5
                  },
                  "title": {
                    "type": "string",
                    "example": "Design a logo"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "example": "Create a professional logo for a tech startup"
                  },
                  "dueDate": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true,
                    "example": "2025-04-20T23:59:59.999Z"
                  }
                }
              }
            }
          }
        ]
      },
      "CreateBidRequest": {
        "type": "object",
        "required": [
          "amount",
          "proposal"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "format": "float",
            "example": 45
          },
          "proposal": {
            "type": "string",
            "example": "I can complete this task efficiently with high quality results"
          },
          "estimatedTime": {
            "type": "integer",
            "nullable": true,
            "example": 90
          }
        }
      },
      "UpdateBidRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "float",
            "example": 40
          },
          "proposal": {
            "type": "string",
            "example": "Updated proposal with additional details on my approach"
          },
          "estimatedTime": {
            "type": "integer",
            "nullable": true,
            "example": 75
          }
        }
      },
      "DirectMessage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "senderId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "receiverId": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "message": {
            "type": "string",
            "example": "Hi there, how are you doing?"
          },
          "read": {
            "type": "boolean",
            "example": false
          },
          "delivered": {
            "type": "boolean",
            "example": true
          },
          "edited": {
            "type": "boolean",
            "example": false
          },
          "editedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": null
          },
          "deleted": {
            "type": "boolean",
            "example": false
          },
          "reactions": {
            "type": "object",
            "example": {
              "👍": [1],
              "❤️": [2]
            }
          },
          "replyToId": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "example": null
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-10T14:30:00.000Z"
          }
        }
      },
      "Conversation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "user1Id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "user2Id": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "lastMessageAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-10T14:30:00.000Z"
          },
          "unreadCount": {
            "type": "integer",
            "example": 3
          }
        }
      },
      "ConversationWithUser": {
        "type": "object",
        "properties": {
          "conversation": {
            "$ref": "#/components/schemas/Conversation"
          },
          "user": {
            "$ref": "#/components/schemas/UserProfile"
          }
        }
      },
      "SendMessageRequest": {
        "type": "object",
        "required": [
          "receiverId",
          "message"
        ],
        "properties": {
          "receiverId": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "message": {
            "type": "string",
            "example": "Hi there, how are you doing?"
          },
          "replyToId": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "example": null
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "An error occurred"
          }
        }
      }
    }
  }
}